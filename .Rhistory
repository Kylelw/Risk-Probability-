An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "  | Dn = ", Dn, "\n")
}
An <- 15 #Assume An >= 2
Dn <- 12 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "  | Dn = ", Dn, "\n")
}
An <- 15 #Assume An >= 2
Dn <- 12 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
plot(An)
for (i in 1:5){
An <- 15 #Assume An >= 2
Dn <- 12 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
}
for (i in 1:5){
An <- 15 #Assume An >= 2
Dn <- 12 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
cat("\n\n New Simulation:\n")
}
N <- 5
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 15 #Assume An >= 2
Dn <- 12 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 15 #Assume An >= 2
Dn <- 12 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
View(risk)
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 15 #Assume An >= 2
Dn <- 15 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 30 #Assume An >= 2
Dn <- 15 #Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 3 #Assume An >= 2
Dn <-  2#Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 189 #Assume An >= 2
Dn <-  100#Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
View(risk)
risk
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 121 #Assume An >= 2
Dn <-  100#Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk2
N <- 10
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 121 #Assume An >= 2
Dn <-  100#Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk2[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk2
risk2
risk2[i,2:4] <- cbind(k, An, Dn)
risk2[i,2:4] <- cbind(k, An, Dn)
N <- 10
risk2 <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 121 #Assume An >= 2
Dn <-  100#Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk2[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk2
risk + risk2
N <- 20
risk <- data.frame(Simulation=1:N,
Rounds=NA,
An=NA,
Dn=NA)
for (i in 1:N){
An <- 10 #Assume An >= 2
Dn <-  10#Assume Dn >= 1
k <- 0
while (An > 1 & Dn > 0){
if (An >= 4){
Ar <- sample(1:6, 3, TRUE)
} else {
Ar <- sample(1:6, An-1, TRUE)
}
if (Dn >=2){
Dr <-sample(1:6, 2, TRUE)
} else {
Dr <- sample(1:6, 1, TRUE)
}
LAr <-length(Ar)
LDr <-length(Dr)
Lan <-min(LAr, LDr)
Ar <-sort(Ar, decreasing=TRUE)[1:Lan]
Dr <-sort(Dr, decreasing=TRUE)[1:Lan]
ALose <- Lan - sum(Ar > Dr)
DLose <- Lan - ALose
An <-An - ALose
Dn <-Dn - DLose
k <- k+1
cat("Round ",k,": An = ", An, "\t| Dn = ", Dn, "\n")
}
risk[i,2:4] <- cbind(k, An, Dn)
cat("\n\n New Simulation:\n")
#At last round,
#if (An > 1){Succses}
#if (An = 1){Failure}
}
risk
